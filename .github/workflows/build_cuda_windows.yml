name: Build CUDA Windows

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:
    branches:
      - master

env:
  CUDATOOLKIT_URL: https://developer.download.nvidia.com/compute/cuda/12.6.3/local_installers/cuda_12.6.3_561.17_windows.exe
  CUDATOOLKIT_COMPONENTS: nvcc_12.6 cudart_12.6 cublas_dev_12.6 curand_dev_12.6 cusparse_dev_12.6 thrust_12.6 visual_studio_integration_12.6

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: cmd
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022]

    steps:
    - uses: actions/checkout@master

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2.0.0

    - name: Add Windows SDK
      run: |
        choco install windows-sdk-8.1

    - name: cache install cuda
      id: cache-install
      uses: actions/cache@v4
      with:
        path: C:\Program Files (x86)\Intel\oneAPI\
        key: install-${{ env.CUDATOOLKIT_URL }}-${{ env.CUDATOOLKIT_COMPONENTS }}

    - name: install cuda
      if: steps.cache-install.outputs.cache-hit != 'true'
      run: |
        curl.exe --output %TEMP%\cuda.exe --url %CUDATOOLKIT_URL% --retry 5 --retry-delay 5
        start /b /wait %TEMP%\cuda.exe -s %CUDATOOLKIT_COMPONENTS%
        del %TEMP%\cuda.exe

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.23
      with:
        package-dir: backend/cuda
        config-file: backend/cuda/cibuildwheel.toml
        output-dir: wheelhouse

    - name: Upload artifacts to github
      uses: actions/upload-artifact@v4
      with:
        name: wheels-cuda-${{ matrix.os }}
        path: ./wheelhouse
