name: Build Default

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-2022]

    steps:
    - uses: actions/checkout@master
      with:
        submodules: 'recursive'

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
      if: startsWith(matrix.os, 'windows')

    - name: Add Windows SDK
      shell: cmd
      if: startsWith(matrix.os, 'windows')
      run: |
        choco install windows-sdk-8.1

    - uses: actions/setup-python@v2
      name: Install Python
      with:
        python-version: '3.9'

    - name: Build wheels
      uses: pypa/cibuildwheel@v2.3.1
      with:
        output-dir: wheelhouse
      env:
        CIBW_BUILD: cp38-*
        CIBW_SKIP: "*-win32 *-manylinux_i686 *-musllinux_*"
        CIBW_TEST_REQUIRES: pytest
        CIBW_TEST_COMMAND: "pytest -s {project}/src/osqp/tests"

    - name: Build source
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        python setup.py sdist --dist-dir=wheelhouse

    - name: Release to pypi
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        TWINE_REPOSITORY: testpypi
      run: |
        python -m pip install --upgrade twine
        twine upload wheelhouse/*

    - name: Upload artifacts to github
      uses: actions/upload-artifact@v1
      with:
        name: wheels
        path: ./wheelhouse
